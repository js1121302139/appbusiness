<!doctype html>
<html>

	<head>
		<meta charset="UTF-8">
		<title></title>
		<meta name="viewport" content="width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no" />
		<link href="../../../css/mui.min.css" rel="stylesheet" />
		<link rel="stylesheet" type="text/css" href="./css/index.css" />
	</head>

	<body>
		<div id="setWifi">
			<header class="mui-bar topBar mui-bar-nav">
				<a class="mui-action-back topBack-ico mui-pull-left"></a>
				<h1 class="mui-title">设置wifi</h1>
				<span id="Topactivity" class="mui-btn  Topactivity mui-btn-blue mui-btn-link mui-pull-right" @click="addWifi">新增</span>
			</header>
			<div class="mui-content">
				<div class="wifiList">
					<div class="wifiItem" :key="key" v-for="(item, key) in wifiList">
						<div class="newItem">
							<span class="tit"><img src="img/wifi-ico.png"/>账号{{Number(key+1)}}</span>
							<span class="delWifi" @click="delWifi(item,key)">删除</span>
						</div>
						<div class="newItem">
							<span class="tit">Wi-Fi名称</span>
							<input type="text" :disabled="!item.isEdit" v-model="item.wifiName" placeholder="请输入Wi-Fi名称" />
						</div>
						<div class="newItem">
							<span class="tit">Wi-Fi密码</span>
							<input type="password" :disabled="!item.isEdit" v-model="item.wifiPassword" placeholder="请输入Wi-Fi密码" />
						</div>

					</div>
				</div>
			</div>
			<button data-loading-text="提交中" id="buttom" class="sure" @click="saveWifi">保存账号</button>
		</div>
		<script src="../../../js/mui.min.js"></script>
		<script src="../../../js/muihelper.js"></script>
		<script type="text/javascript" src="../../../js/md5.min.js"></script>
		<script type="text/javascript" src="../../../js/vue.min.js"></script>
		<script type="text/javascript">
			mui.init()
			var Vue = new Vue({
				el: "#setWifi",
				data: function() {
					return {
						wifiList: [],
						isPush: true
					}
				},
				created: function() {
					var _this = this;
					mui.plusReady(function() {
						_this.getWifiList(function(resData) {
							console.log(JSON.stringify(resData))
							_this.wifiList = resData;
						})
					})
				},
				methods: {
					addWifi: function() {
						if(this.isPush) {
							this.isPush = false;
							this.wifiList.push({
								wifiName: '',
								wifiPassword: '',
								isEdit: true
							})
						} else {
							mui.toast('一次只能新增一个账号！')
						}

					},
					getWifiList: function(callBack) {
						var sendData = {
							config: {
								merchantCode: Fun_App.getdata('merchantId')
							},
							fun_Success: function(resData) {
								console.log(JSON.stringify(resData))
								callBack(resData.data);
							}
						}
						Fun_App.ExEncryptionAjax('order-service/merchant/wifi/list', sendData, '', 'get', 'merchant_query')
					},
					saveWifi: function() {
						var _this = this;
						console.log(this.wifiList.length)
						var sendData = {
							config: {
								"merchantCode": Fun_App.getdata('merchantId'),
								"wifiName": this.wifiList[this.wifiList.length - 1].wifiName,
								"wifiPassword": this.wifiList[this.wifiList.length - 1].wifiPassword
							},
							fun_Success: function(resData) {
								mui.toast(resData.retMsg)
								console.log(JSON.stringify(resData))
								if(resData.retCode == 0) {
									_this.isPush == true;
								}
							}
						}
						if(Fun_App.findObj(sendData) === false) {
							mui.toast('数据不完整！')
							return false;
						};
						if(this.wifiList[this.wifiList.length - 1].wifiPassword.length < 8) {
							mui.toast('请输入8位的Wi-Fi密码');
							return false;
						}
						Fun_App.ExEncryptionAjax('order-service//merchant/wifi/merchantCode/save', sendData, '', 'post', 'abc')
					},
					delWifi: function(item, key) {
						console.log(JSON.stringify(item))
						var _this = this;
						mui.confirm('确认删除这个Wi-Fi么？', '提示', ['取消', '确认'], function(e) {
							if(e.index == 1) {
								_this.isPush == true;
								_this.wifiList.splice(key, 1);
								var sendData = {
									config: {
										"id": item.id
									},
									fun_Success: function(resData) {
										_this.getWifiList(function(resData) {
											_this.wifiList = resData;
											console.log(JSON.stringify(resData))
										})
									}
								}
								Fun_App.ExEncryptionAjax('order-service//merchant/wifi/merchantCode/del', sendData, '', 'get', 'merchant_query')
							};

						}, 'div')
					}
				},
				computed: {

				}
			})
		</script>
	</body>

</html>