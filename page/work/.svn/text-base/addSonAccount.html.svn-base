<!doctype html>
<html>

	<head>
		<meta charset="UTF-8">
		<title></title>
		<meta name="viewport" content="width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no" />
		<link href="../../css/mui.min.css" rel="stylesheet" />
		<link rel="stylesheet" type="text/css" href="../../css/mui.picker.min.css" />
		<link rel="stylesheet" type="text/css" href="../../css/mui.poppicker.css" />
		<link rel="stylesheet" type="text/css" href="../../css/page/work/addSonAccount.css" />
	</head>

	<body>
		<div id="addSonAccount">
			<header class="mui-bar topBar mui-bar-nav">
				<a class="mui-action-back topBack-ico mui-pull-left"></a>
				<h1 class="mui-title" id="pageTit" v-text="isEdit==true?'绑定子账号':'编辑子账号'">绑定子账号</h1>
			</header>
			<div class="mui-content">
				<ul class="mui-table-view">
					<li class="mui-table-view-cell">
						<span class="inputTit">姓名</span>
						<input type="text" name="accountName" id="accountName" v-model="pageData.name" value="" placeholder="请输入姓名" />
					</li>
					<li class="mui-table-view-cell">
						<span class="inputTit">电话</span>
						<input type="tel" maxlength="11" @blur="changeUserData('mobile')" name="accountPhoneNum" id="accountPhoneNum" v-model="pageData.phone" value="" placeholder="请输入电话号码" />
					</li>
					<li class="mui-table-view-cell" id="PhoneCode" v-if="isEdit">
						<span class="inputTit">验证码</span>
						<input type="tel" maxlength="6" @blur="changeUserData('messageCode')" v-model="pageData.messageCode" class="msgCode" maxlength="6" name="accountPhoneCode" id="accountPhoneCode" value="" placeholder="请输入短信验证码" />
						<button class="getMsg" @click="smsVerify" :disabled="showOutTime" v-text="second==90?'获取验证码':'剩余'+second+'秒'">获取验证码</button>
					</li>
					<li id='showUserPicker' @click="showPicker(job,'job')" class="select mui-text-left mui-btn mui-btn-block mui-table-view-cell">
						<span class="option" id="userResult" v-text="pageData.jobName">123</span>
						<a href="javascript:;" class="mui-navigate-right">角色</a>

					</li>
					<li id='showUserPicker2' v-if="isShowGroup" @click="showPicker(group,'group')" class="select mui-text-left mui-btn mui-btn-block mui-table-view-cell">
						<span class="option" id="userResult1" v-text="pageData.groupName">123</span>
						<a href="javascript:;" class="mui-navigate-right">团队</a>
					</li>
				</ul>

				<!--<div class="Bz">
				备注： 绑定成功后，手机号码为兑咖联盟APP的登录账号，密码默认为手机后六位
			</div>-->
				<a href="#" id="addBtn" @click="upData" class="addBtn mui-text-center" v-text="isEdit==true?'绑定':'编辑'">
					绑定
				</a>
				<div class="addSuccess" v-show="isSuccess">
					<div class="addSuccessInfo mui-text-center">
						<div class="addSuccessInfoTrue">

						</div>
						<p class="addSuccessTxt">绑定成功</p>
					</div>

				</div>
			</div>

		</div>
		<script src="../../js/mui.min.js"></script>
		<script src="../../js/common.js"></script>
		<script type="text/javascript" src="../../js/mui.picker.min.js"></script>
		<script type="text/javascript" src="../../js/mui.poppicker.js"></script>
		<script type="text/javascript" src="../../js/muihelper.js"></script>
		<script type="text/javascript" src="../../js/vue.min.js"></script>
		<!--<script type="text/javascript" src="../../js/page/work/addSonAccount.js" ></script>-->
		<script type="text/javascript">
			var Vue = new Vue({
				el: "#addSonAccount",
				data: function() {
					return {
						getObj: null, //获取编辑的数据
						isEdit: false,
						isShowGroup: false,
						check: new CheckValue(),
						pageData: {
							"token": Fun_App.getdata("token"),
							"id": null,
							"name": null, //姓名
							"phone": null, //手机号
							"groupId": null, //团队ID
							"jobId": null, //角色id
							"jobName": '请选择', //角色名字
							"groupName": '请选择',//下面会做delete
							'messageCode': null
						},
						job: null,
						jobs: [],
						group: null,
						groups: [],
						showOutTime: false,//显示倒计时
						second: 90,
						isSuccess: false//是否成功显示成功提示
					}
				},
				created: function() {
					var _this = this;
					mui.plusReady(function() {
						_this.getObj = Fun_App.getextrasdata();
						if(_this.getObj == 'add') {//判断当前的状态是不是添加
							_this.isEdit = true;
							delete _this.pageData.id
						} else {
							_this.isEdit = false;
							delete _this.pageData.messageCode
						};
						if(!_this.isEdit) {
							_this.pageData.name = _this.getObj.name;
							_this.pageData.id = _this.getObj.id;
							_this.pageData.phone = _this.getObj.phone;
							_this.pageData.jobId = _this.getObj.jobId;
							_this.pageData.jobId != 2 ? _this.isShowGroup = true : ""; //是否显示团队
							_this.pageData.jobName = _this.getObj.jobName;
						}
						var JobAndGroupdata = _this.getJobAndGroupData();
						_this.job = new mui.PopPicker();

						for(var i = 0; i < JobAndGroupdata.job.length; i++) {
							_this.jobs.push({
								'jobId': JobAndGroupdata.job[i].jobId,
								'text': JobAndGroupdata.job[i].jobName
							})
						}
						//如果当前是编辑状态就设置为店长一个选项
						if(!_this.isEdit) {
							_this.jobs = _this.jobs.slice(0, 1);
						}
						_this.job.setData(_this.jobs)
						_this.group = new mui.PopPicker();
						if(JobAndGroupdata.group != undefined) {
							for(var i = 0; i <JobAndGroupdata.group.length; i++) {
								_this.groups.push({
									'groupId': JobAndGroupdata.group[i].groupId,
									'text': JobAndGroupdata.group[i].name
								})
							}
							_this.group.setData(_this.groups)
						}
					})
				},
				methods: {
					getJobAndGroupData: function() {
						var datas;
						var sendData = {
							config: {
								"token": Fun_App.getdata("token"),
							},
							fun_Success: function(data) {
								if(data.success) {
									datas = data.data;
								}
							}
						}
						Fun_App.ExAjax("merchantAccount/getJobAndGroup", sendData)
						return datas;
					},
					showPicker: function(selects, key) {
						var _this = this;
						selects.show(function(items) {
							if(key === "job") { //判断选项的类型
								_this.pageData.jobId = items[0].jobId;
								_this.pageData.jobName = items[0].text;
								//判断当前选择的角色是否显示团队
								if(items[0].jobId != 2 && Fun_App.getdata('jobCode') == 'BOSS') {
									_this.isShowGroup = true;
								} else {
									_this.isShowGroup = false
									_this.pageData.groupId = null;
									_this.pageData.groupName = null;
								}
							} else {
								_this.pageData.groupId = items[0].groupId;
								_this.pageData.groupName = items[0].text;
							}
						})

					},
					changeUserData: function(key) {
						clearInterval(this.timer);
						var _this = this;
						switch(key) {
							case "mobile":
								_this.pageData.phone = _this.check.checkPhoneNum(_this.pageData.phone)
								break;
							case "messageCode":
								_this.pageData.messageCode = _this.check.checkCode(_this.pageData.messageCode)
								break;
						}
					},
					timeOut: function() {
						this.showOutTime = true;
						this.second--;
						if(this.second < 1) {
							this.showOutTime = false;
							this.second = 90;
						} else {
							var timeout = setTimeout(this.timeOut, 1000);
						}
					},
					smsVerify: function() {
						var _this = this;
						var sendData = {
							config: {
								"token": Fun_App.getdata('token'),
								"phone": this.pageData.phone,
								'type': 7
							},
							fun_Success: function(data) {
								(data.success) ? mui.toast(data.message): mui.toast(data.message);
							}
						}
						if(this.showOutTime == false && this.pageData.phone != null) {
							mui.plusReady(function() {
								Fun_App.ExAjax("merchant/smsVerify", sendData);
								_this.timeOut()
							})
						} else {
							mui.toast('请输入手机号!');
						}
					},
					createAccount: function() {
						var sendData = {
							config: this.pageData,
							fun_Success: function(data) {
								if(data.success) {
									_this.isSuccess = true;
									_this.closeWin(1000);
								}
								data.success ? mui.toast(data.message) : mui.toast(data.message);
							}
						}
						Fun_App.checkObjIsNull(this.pageData, ['groupId']) != false ? Fun_App.ExAjax("merchantAccount/create", sendData) : mui.toast('还有东西没填！')

					},
					closeWin: function(timer) {
						var detailPage = plus.webview.getWebviewById('teamAdmin.html');
						mui.fire(detailPage, 'getTeamList');
						setTimeout(function() {
							plus.webview.currentWebview().close();
						}, timer)
					},
					editAccount: function() {
						var _this = this;
						console.log(JSON.stringify(this.pageData))
						var sendData = {
							config: this.pageData,
							fun_Success: function(data) {
								if(data.success) {
									_this.isSuccess = true;
									_this.closeWin(1000);
								}
								(data.success) ? mui.toast(data.message): mui.toast(data.message);
							}
						}
						Fun_App.ExAjax("merchantAccount/editAccount", sendData)
					},
					upData: function() {
						console.log(JSON.stringify(this.pageData))
						delete this.pageData.groupName
						this.isEdit ? this.createAccount() : this.editAccount();
					}
				}
			})
		</script>
	</body>

</html>